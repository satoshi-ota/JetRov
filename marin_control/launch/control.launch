<launch>
  <arg name="feedback_gain_p" default="0.08"/>
  <arg name="feedback_gain_i" default="0.04"/>

  <!--Arduino rosserial-->
  <node name="serial_imu_node" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/ttyACM0" />
    <param name="baud" value="115200" />
  </node>
  <node name="serial_control_node" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/ttyACM1" />
    <param name="baud" value="115200" />
    <param name="feedback_gain_p" value="$(arg feedback_gain_p)" />
    <param name="feedback_gain_i" value="$(arg feedback_gain_i)" />
  </node>

  <!--imu-->
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_node"/>
  <node pkg="marin_control" type="imu_node" name="imu_node"/>
  
  <!--marin controller-->
  <rosparam file="$(find marin_control)/param/control_params.yaml" command="load"/>
  <node pkg="marin_control" type="marin_velocity_controller" name="marin_velocity_controller"/>
  <node pkg="marin_control" type="marin_state_publisher" name="marin_state_publisher"/>
  <node pkg="marin_control" type="marin_odometry_publisher" name="marin_odometry_publisher"/>

  <!--Robot urdf-->
  <arg name="model" default="$(find marin_description)/urdf/marin.urdf"/>
  <param name="robot_description" textfile="$(arg model)" />
  <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher" />
  <node pkg="robot_state_publisher" name="robot_state_publisher" type="state_publisher" />

  <!--ydlidar-->
  <node name="ydlidar_node"  pkg="ydlidar"  type="ydlidar_node" output="screen" respawn="false" >
    <rosparam file="$(find marin_control)/param/ydlidar_params.yaml" command="load" />
  </node>

  <!--tf-->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser4"
    args="0.2245 0.0 0.2 0.0 0.0 0.0 /base_footprint /base_scan 40" />

  <!--Visualyzer-->
  <node pkg="rviz" type="rviz" name="rviz"/>
</launch>
